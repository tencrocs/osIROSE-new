sudo: false
dist: trusty
group: edge
language: cpp

env:
  global:
  - coverity_scan_script_test_mode=false
  - coverity_scan_run_condition='"$TRAVIS_OS_NAME" != osx -a "$BUILD_TYPE" = Release'
  - secure: "s3nV+bCZyiJFhubZgq1SjP+6DUQgT0fzeTTvaPytYTvFuyYWrTzMPdqdhLXc5MZ3mQ/3PMvn3ZjU0AlT7YypLjyGY0LM8tFD4HD608DWR3qRDnlPKsB4nTCQVCp30FhlFSzlVt4E6ZZCtbbu3X92Q+B4UGjGBnX0T4ePsJMk+CfFKGxbF6Hyo6rThXTfRvGWQtu3pI5pmHksyDyCTtX/m5ljslVy84WTLWREX6m7GSeVu3MB+D9hWR+SGkxbjzxtwSfGmUp2893/xxac+BJNTXqJfKDJA7y98/jB65VASfos3T3Bkdq4nl1e5D4jAmcWE6ZsPpjvem4iZGUZwYbdUNhCk2iGDUjnJYU18z+3R+A4LChmXJlSmtG9AcLU+MT1rJeTQCUqq9pBXAG+keOdBu4J+CvBS5KrhmbG6pXHfUMY0UAqcAHdkgZo26JNnm9kIGcz+IrFOPERUe/naFM+27QGDZ0RfYkbWGbiqaTQ2SptMIOn7/zEqkWWOoT4CImtbSjjOETStIPzIWzR/I+bWFuNL/RL7K1UimqrfQFYG/W1WWXi8ZYqSE+DJX/ejWAytvvq6FWNhXOLe7+0fc/ZzhFTQqusdg0G3wNXKLSNVzuC1MyYXwoJEw33397GsPaK2E5tKlwi12txun5uWAzagHuYVTuHNHKt4qV8+e3AIjw="
  - secure: "lCkzkfbDqElSZogmvXbG+KVQa2CZX9haWabUTfBjeATY53WHu+3sw8b5QQtRnk6tZSa/v+aOGP/sF6gu8jY9Jp3cMp7ubgjuNmDoiVsdhsym44HA2dgVjKmxJhSNLJDqS1s0OvbzjgiWXzW62f0l8LxR2rEpXQ1M2621KSdxx4jLA91IFp2kdg3rDqPBE4mJNw3yHXMacs7QFn9AW4D5MFxZcGG9jLzzGMlHE7j4vtGVbODrFCZ3iHVVkZ3T2cyp6Xo3LmXQkqRd2LM63B2A7EJhXOJvn2uHjL8ZL8oQnKqS0gpMZGYtV2EJraUegHiFBZDqqLR8+MqUaTNWi2tPLERdkYMUUuq64vpC+KxtlWLi/ipdtClaUPD9kiyzMIh5Wkw1LtWFejRm6KBcf7T++88mureC/G1iJjHBvXkubolK6pffQMLueuvTMM6f+7OGRS4GpHwG3iGL1hgcUlWtnmEuglb7Z/PMxmEhtdo4Ret2O+UKWh4AVlf1yqfbH3INSjuGFMcS085GZoFiTN0amDZigSVcMpWU82+tHIjI3KWqfJeCCjzBO5LDJ5yIdCo7A/4+pzROlWmy4Ed/De1JxCO1rujDyY26xeg12G3SO3qj4bxSjnnyykPWIfnj8pkJX9g9m3fTmQzVXEZOxQAb+2qf5igWvKVsSxgrcMLCYIY="
  - secure: "s8DdaxdWVR3qRBxfxO6UjugB1dWlEnv9KhF1ZUHDhWziPtoecKjCXnJYSB6EOddTPoJXtOdTVW9ThGGCvKQ+vYdGNce+PCWglruANO/lEz/82HWPZkTKbw4WyoDo5GqlFCu1C3gY9dA58ClpGDlX5BNQA81JCJrWKUdR2J0/WW9USPKHxDLGISYKt28nwVjywR8uDnysBJkmmS+53Ge2MSzmOLuEZeysq7iCD6xssPL5UDDb/itNOc4OkvRGtvTnLrMF4c7naFRfbhc7NR1MxKz+eu2DgM9SAnJrh1jnYXWu/1EG8VKQOYR23OwjxSurSRjJxInGZdrSGUB8R38Z35Ndq7RHKRAZvwIPkZqDFCUQ/hkAJlu/4cbz8KPHJMOV0SOFpCztnFCQY619KXn0S0Tos38KthVu2nNSMJu1e1GuQK1dhM+Uh3MCrSChyPmK75IKbM7Jj5OKRqKO4uSnsut3RK91RYF3oB3HdLkznTLYBLnyEWK6Zh56lhoZiJMd/WCL24/U5Pne6VwLDBjaeOH9lEjD6oaUSIDyowVAOte4qVg7WW7OXx2fkK9ySd4X0P5C5JLtWsZ8O+va9LkIxPPCdck3HV+k1EU0tHrLAAkpwO3D9StRdkc7cX+z13aFOZQyKef1wbKyNCYrq6E3SGvlI011+0vN2ZiGKKusGcs="
  - secure: "JuSus/BqBJ2RTj7oJ3tn6dfFqnNWmWdM6/+PBId8YT52fUJTQp0eLmYbqZhq04OFvCKLgzeiObggfFZk5VOXAB/bfhlQEKSprso6C0WxKzFnftr085rcr5mW2ux+RSWTeE9KT1bpsjtpSrQTOniQhPGD6u704DdIzKuOnSngU8TXRAHFujXtUA0SHU8Oft8OpysaTDVWbFehBemg6BeOssklw2LrScGT3AWm8+qNdyAV+ynko4s8CzdOJqueCNWnkYFQyNtWN67uasveg3j+zgOfstjgyYSEoYh6deCNy8BjmWzX2tUkpzxh7h4w/VlyVjvyMG524UdMDmFZNNo7CMn1/qla6zjli3xDV/kk2Dfzj1JCn2WsesOY8+p4bdYoUU4lR0PuYraEuBAOCiVb3V7VLzU5FyV3clY8+MwifVHvNLxUbyD2ygZfPrS8LQJ/7jJSPeEARUIngvNkY9L8Jr6olw3Xg7DoDHLWAFBMtBi/sZG3CvXDyeIUX8rkh4hY6QlnO/xrql5KxDupsAwqj+rMdhzYeCnyRY6HvqBIoIrpi47uPGutxiIFgjrzwr28eL+XrrkwHfbM+pFDUITdWjm79/EyEPgGsEMM8IxXcpSGNmMDDhpHu1oZE4L3gdKli6hdS5fo6CEDV3x1nvk/SsY52WhEWIT/RwQPl4qL3YQ="
  - secure: "tvFQn4BjO/DG0yE5NEdZsmY73qsxhN5CsXl+C4GkCzz8KgtOGyVFij5R18+IP3X44CKOz54dLy9pE3lCY2v9wvvLnnv1hV3kH2EvV5Ccv2zw8jozz7OpxK2GMSoqPvHK/FAEo3mbuwhnOS2fEV3+hWSF9/piwSAmFhnjH7VHZnnx8yVfpzEl0Oq4JLM1fEx400Z+Glvn9uDfjY8cvzRVp8HqHTuPNNRLmNvGPAYqstpKAxEh6Tml6eUrCxbndbcvtTt7vlshW9OuU5LVh2Y63ftZpsKCWfpu5K4MfgD4oLineo+2zz3jfv/Hs8vTVLzRQph6OkxLiZBqUgUyoZzZ/r4bMQbbS6wmbWwZOaIQyjFRr68FZ/yW4JJ/KkUhMB3LA7it2rNhhI6+jTQqvLO+VAucuUmFJ0xIsbULBTo7cyL7X40rDLFxhXNLTjcqPT1nUzKCrmFxrDh7utegggN0UtXVAWl6KN8f003TVlunM+BrB8r08kX/JU0modFzXS0sMDF/tuzMd9dd/R4CtoHAuP20J7LZ81EA8IbKJ5j6dsc8l+Ti5/LwLrEtxXnD6MSSNDoSZszeyLA78+zGzKLNNvHGdnHTFgFd3Q/gVYJgH6AWAVCJeSnwXbI78azIFohPwsT/JsJS092Ck6rgRKpbZNNmOVfpn6WsXoQBrLpcg0A="
  - secure: "LlExqKgh62XHAgZEECsTueF5eV5Hz3T9A32C80L+Y+qN4S/n7lggAiIl5n/WM0Uinl+fLRuP50w9jG58tpzzl6NEcRSYWyOsZduV1T66Qnd5PVbIgvzmvLJLigQTvdLT4OLnfaEKrQGSdoiXEAbiME7KCTvSOQxDdyGOMeL3xDDyIeGf6tvkmhK8xtoEy+mbXT9dCQb4BgsmMoKnnxR4X+6WsMcavEN0QnKfupQYf5kwSNvpj4GY2+OhwUgs/jRp1m4PYPvKNTjURQ5v2rHWXmtqM0uTs8SAvlfjAUSnN3S2czUb3fRGKJle23X6Ei34A9N2+fOGUji7Hp15JvuDycU+WlBKt9NfBloss2nI/eUXsPIMjmvbNdp2+2tMS7hpa0tppZSJTtgzGyiNSzfsficrbAeoK4XLYQjLFFScomx3OrfN9hfCcjWKTeHwalxO1IV6OOH/lRLV9dAFEi9D9x+F3qYl3cK2Q7TlkPOcPDnc+BYNyd6ymTJTGZPd7NsM2NX/96IW7ZdN6QZS5rC3sKx9E2WteDU/2HT/YH2EaCEAz+0RC8SdMXS3qsNVvPfnMSHoPRWIdYWSFJOzukTi21jjTIlayO4vxBenoG7ALTrK+ZvA74BtkMijFE9lYRoAqZfN91Js8MW+baIn4xCDBLue814s5zqhMdh8SQLfM8Y="
  # start artifacts
  - ARTIFACTS_BUCKET=osirose-builds
  - secure: "tDTFSzBd6ASR8BM/pZMLMQy1jjlbxA81WaLfZ70OgTZE6KZ+X+mSdu/i5SyXzhdZSl62tVDo2jIjGupGLtzWjMtRJiN2zNHscYS+V4BbSfk97zKXs+fH96aDlGJBIqJSxT3aRqgvTCLFXzEWyZEQxzYX7u9I5P0ftMBOalkxfcU1JrBerJBdsXLFuGjKfyGfCOzvRBCjzpAhKHTsD4ecJyqqTk3XqDqE4P+8ibJXw0fWj6D0K2XTNq4krol+Vmcw2qZEGp3gVAy6blOM1ggopFRr/gTZjyA6Q/twnS07DH7w1v2RnCMjc12rTlR8usVrHYo73FUO47PMuWy/UhOhziuJy9Zu6GxcenRS/JmVYVY3cDcuczkrHX4JIn/qtwNROd8vhos+rOMFv04KsZYOkILrJmSmrwELldTw1/VkKMuk7rjcS+lcGbm2K+XZ9xUXefNGNnYbWlpQ6v8anAgOFU0/eOY3y2PknhH/2tUxX+hHq1AFMv63cGkSoRLPSXKz8gdKKN1dEIb8/ZLrz5glvv6rsLRqfvO6K3U1jyM5Sb2YCpIRd2x8CEv09QwVHWVjXdmBSVURdfY3p41G16wvMT3GCH7/VCJ6rGz1WmFzMEDX2ua5P+SFXagL0iBZNmF1HWVxkpwE1MGPkq/WlpSw//cY+2PNBktDjClluzE3w9s="
  - secure: "CgXInxIv08nvVBQY9UgP9ZeBMlDyuQ9wr0DmoB61UGMGNaJps11Shuikz0tDcJxqFsSapJPkXc03B6rK7Bhckdz3MKYp0RLNsEv0984QkKiseYnqFc6h6qJGV2AgsbHLBKZoqxVxeDV2biKvYqDkG3ylTSSaL7+eMvTguc2aK9zUhcFKoBdsRBECTdte2Nd/GVUIJIuUaFMncuTscZLR5VwNaN8xf6BTG5oitKbBje304/soMgHL9WdGuzeBT42QtE8yJ82SmlPvV/dAjGaSwLENmehpc3XIlaevrJg4Ptti8XBazjwvCR9bF5HVnP5uADqmLcznl1PQXDLjNeVryLjnFvAf4wveLxHeW13olMnZsgV84ABWEHTcUuz4z5KM+BKvLGjQB3R9msVr2YKn0KJfqeCPSdnctKAgKlYyRFKOIuohuHsVu+PJzq6NOFWs6c3IrEE+YgqSXhpgFcARt/Z1BTfVm9sAlHEY5I9Hlzxfl+F9HvjvQXtzhwt3fMB6dCeQfnGp/k660Q4wpo7zWHPc7o2OskeZwrTKzaSovFYXltGRQxDKOPZEjA1aLpK8Dnk46x+p9Kd+ClsV+WeOOG+u3xjR90NIjhOziurtMgMy/m/XluIvbMDCChZF8ecvo5+qEWeB9fAp3dSrkn4xInbTG+747P3hL2FxRLflwdo="
  # other artifacts upload
  - secure: "xBpVz5i5Cr2E47irPh4tbe4ytOAxIEN3vz68h0xDjRrFg+ZhYNarZsjTAHOgZuGyzMhoDmI3Ld8VvI5Qqx00giK+zkJ2SSqDx2UvAvn6cE8+Td9GyQ9wM8yNysU96l+mHpxwhDUabin6DG0Ea9XO4Qzc2qtWURkZxvymmzH5mEpklp8LoBjrr42e3Mo3J0h4C94wO/y6TenjjP8r0y2spUakxTC84u1T11zysKm/C16w3GECDNqaTMVO7zi9ctVjsTBPSqTA9PwuecUfMnB0B4f906U6B45xlVT0fXu76gEed7EeB8/YUHXU68BaTxP9pM9ytxiWZ6Wb+WPIPHS5cp4JuB7JTv4vmBlznBZdFkijhiQmoSloVtWhF6lBh0ke6ecP3/Wp0xuR4Qf+BdkbH9m13JzkDXKIeYnDbIJZ2XSCgo/Z7DQ23Xa2KB3SEvXT1LCbaZOwtxVxEVLBwlcYtH34CTmdG8gSvso4ZM4q6hSjTWjcXRY7zmgkJLRjtdPA+yaWmyXfYKz50CJ5QTmJj65LglIO3GszaEVvRwdy35SDiiEhnF8XNKJ5lFYTNgaGzY+o0gL0ZE1fAHI6GahBiY5a+9r2vHvMQ9QIOei3Ny1w2dZ/8ATZyZbXXjBmBLIwf0iY36pXzbTpRgZQi2fe0nGl2lg11Il4rtfyBL5hQfs="
  - secure: "HuHas8zjvhptDPYZtq8bq2Zp54iqlZ5vuVZx859fPr42nqn9UoGWUlAhBlT7MDb9zPPGTtkHPRgoH85jTqxEKt+XmC4IvPkTch64N45G8qE06Kp+wKjzDyrSWn9OiMkk/Dfx/ppALBKmOGWNYoAHVSs1uM/iW3lniCXGAjKawf6eTZ56rQu59dLki723hugVFnLHou2lv/aAqAjJF4BydnHPHGZWthegjo2NDSaTJs3jtxTAMvYoUTPFVXumfNfS8/NlCFY5//YPOtVpTlHdfI8xmr89CuRdy/tuti7Dhbll+GVeRmFfUwSIREFp9mUZDiaDk3df1KBdND1pmmDEdEGZ0O3sKNpXGfHKAGxcHfKAPgSowlcRRPuqnZVcOfVtwgJOR+0JhV/WuUqZMqkHArYhHnudvojZ5euTAKKNdxrn8hYHw+jpHkHvCHmt+4KA4TR/OhoW6fxSKQNkcpTc4eREt53FoKOWhF3zJNx+YM/8/E07mu3j7zxbZHDspNtD5HrfU36WfxprAj62uvujKaqfhYjKBjq/k0THAcUPpQ8KoH75zjUMtn0k2sVpUlumci/1JErLipBtAWyOWwhcbFgMzX7I0UqbMuZ3mOivvjjX+3m6tntR2FReh8CUoh8dfhOsoAp3Fgm8mskuJLQ0/ry+YXe4+tIKyAHYu6Qhibk="
  - secure: "rhEt4Tgu1txNXU//wxmxZCTiIbFeZMZpCWUt5kmQDJN8pn1Phykr1cdoHG9uMQ0BYmo+aGyt/IdFlNiPP5LWNHYTMRj0SlQu2RsYQzQqAkQ6ZbKdWOcBddeDZehSwiDNllIx7qMcpjrqeKdsf6NyEzlhp+Zb9wkfS0ghpWa2OhXMMxLmVSZngWQByh+SzCdkuuDXNXJZdDUh9bKovowvngW+AyqMpn1lJzC671zX8o/f2reedHp/SbEvz0DIHNK6euWC7Qr1BhkOGxuaBtNvbtbtyCzpsc+NoWRbYFhlsEVvkA3jSD7bqOpda1/cqfbGRVTk/vUU+I5n02gpC5rqvX65aLtsGWeWYFvuxVHPqE5UAgMk0+6WdSEWotBhjnrGN3U8zNKG9TxrTIHn24EUVMDmGNcxujtoFpEeUrU8gp5TCKb4rwi0S722YhcnkKqZuPcQ8GMdr0sme+C5zWQev+6UuUpW1UJnrBDTMDgK/vScRU4l6WGB7Gkvxyd+yxwoCEe8l3WKBbNv0v1TcKqnoYIDiIhSkWMHtOQBC7b88bJI/uiKNZ2qEakiNlcuuVkCow1nC0jlJTSiOlzDRdS5sWYlTS7TaKqwSrnN7SR3SMWO10hw18ACY1wbwGk9BTwaLSX625Dm54OJI8AtWjrI0ASvrkd/B3INLww7UYO8xdQ="
  # end artifacts
  - secure: "MXG3LzmYr0KLqEw3WZo1qY3/iGVaAQuAcE/V9ad3FlpBz89BoNpNP+frf6Yrvamy/UGiR14hgcPbzmTI5DvdBkdFpf9K0xuLRAOsxOMPfTU2d6ip42uifDJ8koXg8INzOk8iab9TftzY2Zg/u4/L3JEo2HWbKFndQMCke7IZqpNOCcrJWdXtpb0/QKpcCxbovS4toAAkmi1P/2S21CdTnZLF4ee06h5yChkrHjXNPiDfBpM5uhuIkH/KS0ruv9WyUTd7gGtgQ7KzKcyRCWv3G9jXZNbP5nXGVsPFnRz1o3ZBBgBX2ZYQsYoMqQdbfFTe8hi6xuabSACAxlhQh3+f8l05a43d1zP7uWh7on0z4CAVIbM7MVBjfJYT1lzQNujpyjPO1DhiT4+2wGzdCNLqu2KFxhgj8nsafYs/Esj7Ie1zn7IcquruqJg24QTFgTxvuACidQcuTnc9f5NBM+hLqWTsvnD0tvFzkk5tEzc3XJwmTzXWk348DTO+SmXZvs5EiMORue7igCa8QGnWT6R4WtCrNBSDWza17VV9uGUJhgakI8bSvTOlUhUpsBmPR5rPaRZKkKTvpm6KLsqEj1dqEyyE69aTZ+ow+mRX16PiZT6feW9nyFvshkA4UzBHwN9Y9/kz/xSwz6Tg7WDG69Ru3XGY7FuxKAmTjJm4DspOdZ4="
  - SUITE=tests
  - PREFIX=${TRAVIS_BUILD_DIR}/3rdparty
  - PROOT=echo "ERRROOORRRR STILL USING PROOT!@!@!@!@!@"
  - WITH_CRASH_REPORTS=ON
  - BUILD_JOB_COUNT=4
  - CCACHE_SLOPPINESS="pch_defines,time_macros"
  - PATH=${TRAVIS_BUILD_DIR}/3rdparty/bin:${TRAVIS_BUILD_DIR}/3rdparty/usr/bin:${TRAVIS_BUILD_DIR}/3rdparty/usr/local/bin:${TRAVIS_BUILD_DIR}/cmake_app/bin:${TRAVIS_BUILD_DIR}/ninja:$HOME/usr/bin:$HOME/usr/local/bin:$PATH
  - LCOV_PATH=${TRAVIS_BUILD_DIR}/3rdparty/usr/local/bin/lcov
  - CI_DIRECTORY=${TRAVIS_BUILD_DIR}/cmake/scripts
  - GENHTML_PATH=${TRAVIS_BUILD_DIR}/3rdparty/usr/local/bin/genhtml
  
services:
  mysql

cache:
  pip: true
  ccache: true
  bundler: true
  directories:
  - ${TRAVIS_BUILD_DIR}/3rdparty/bin
  - ${TRAVIS_BUILD_DIR}/3rdparty/usr
  - ${TRAVIS_BUILD_DIR}/3rdparty/lib
  - ${TRAVIS_BUILD_DIR}/3rdparty/include
  - ${TRAVIS_BUILD_DIR}/ninja

jobs:
  include:
    - &gccinit
      stage: prepare cache
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      compiler: g++
      addons:
        apt:
          sources:
          - deadsnakes
          - ubuntu-toolchain-r-test
          packages:
          - lcov
          - g++-7
      before_install:
        - eval "${MATRIX_EVAL}"
        - export PREFIX=${TRAVIS_BUILD_DIR}/3rdparty
        - export PATH=${TRAVIS_BUILD_DIR}/3rdparty/bin:$PATH
      install:
        ############################################################################
        # Install a recent CMake
        ############################################################################
        - |
          if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
            CMAKE_URL="https://cmake.org/files/v3.11/cmake-3.11.2-Linux-x86_64.tar.gz"
            mkdir cmake_app && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C $TRAVIS_BUILD_DIR/cmake_app
          else
            brew upgrade cmake || brew install cmake
          fi
        - cmake --version
        - bash $CI_DIRECTORY/install-ccache.sh
        - ccache --version
        - ccache --show-stats
        - bash $CI_DIRECTORY/install-lcov.sh
        - bash $CI_DIRECTORY/install-ninja.sh
        - bash $CI_DIRECTORY/install-mysql.sh
      script: true

    - &clanginit
      stage: prepare cache
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
      compiler: clang++
      addons:
        apt:
          sources:
          - deadsnakes
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-5.0
          packages:
          - lcov
          - g++-7
          - clang-5.0
      before_install:
        - eval "${MATRIX_EVAL}"
        - export PREFIX=${TRAVIS_BUILD_DIR}/3rdparty
        - export PATH=${TRAVIS_BUILD_DIR}/3rdparty/bin:$PATH
      install:
        ############################################################################
        # Install a recent CMake
        ############################################################################
        - |
          if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
            CMAKE_URL="https://cmake.org/files/v3.11/cmake-3.11.2-Linux-x86_64.tar.gz"
            mkdir cmake_app && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C $TRAVIS_BUILD_DIR/cmake_app
          else
            brew upgrade cmake || brew install cmake
          fi
        - cmake --version
        - bash $CI_DIRECTORY/install-ccache.sh
        - ccache --version
        - ccache --show-stats
        - bash $CI_DIRECTORY/install-lcov.sh
        - bash $CI_DIRECTORY/install-ninja.sh
        - bash $CI_DIRECTORY/install-mysql.sh
      script: true

    - <<: *gccinit
      stage: compile
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" SUITE=tests BUILD_TYPE=Debug
      before_install:
        - eval "${MATRIX_EVAL}"
      before_script:
        - export CC=gcc-7 CXX=g++-7 GCOV_EXEC=gcov-7
        - mysql -u root -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('')"
        - mysql --user="root" -e 'create database osirose;'
        - mysql --user="root" --database="osirose" --password="" < "$TRAVIS_BUILD_DIR/Database/osirose.sql"
        - bash $CI_DIRECTORY/before_script.sh
      script: 
        - cd build
        - cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DWITH_CRASH_REPORTS=${WITH_CRASH_REPORTS} ..
        - cmake --build . -- -j ${BUILD_JOB_COUNT}
      after_script:
        - ccache --version
        - ccache --show-stats
        - ctest --output-on-failure
      after_success:
        - mkdir ${TRAVIS_BUILD_DIR}/public
        - cp ${TRAVIS_BUILD_DIR}/3rdparty/lib/*.so bin
        - cp lib/*.so bin
        - cd ..
        - tar -zcvf ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz build
        - curl --ftp-create-dirs -T ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz -u $FTP_USER:$FTP_PASSWORD $FTP_HOST/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz

    - <<: *gccinit
      stage: compile
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" SUITE=coverage BUILD_TYPE=Release
      before_install:
        - eval "${MATRIX_EVAL}"
      before_script:
        - export CC=gcc-7 CXX=g++-7 GCOV_EXEC=gcov-7
        - bash $CI_DIRECTORY/before_script.sh
      script:
        - cd build
        - cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DWITH_CRASH_REPORTS=${WITH_CRASH_REPORTS} -DWITH_COVERAGE_REPORTS=ON ..
        - cmake --build . -- -j ${BUILD_JOB_COUNT}
      after_script:
        - ccache --version
        - ccache --show-stats
      after_success:
        - mkdir ${TRAVIS_BUILD_DIR}/public
        - cp ${TRAVIS_BUILD_DIR}/3rdparty/lib/*.so bin
        - cp lib/*.so bin
        - tar -zcvf ${TRAVIS_BUILD_DIR}/public/${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz bin ${TRAVIS_BUILD_DIR}/scripts
        - cd ${TRAVIS_BUILD_DIR}/build/bin/symbols
        - curl -F symfile=@LoginServer.sym $BREAKPAD_SERVER/symfiles
        - curl -F symfile=@CharServer.sym $BREAKPAD_SERVER/symfiles
        - curl -F symfile=@MapServer.sym $BREAKPAD_SERVER/symfiles
        - curl -F symfile=@NodeServer.sym $BREAKPAD_SERVER/symfiles
        - rm *.sym
        - cd ${TRAVIS_BUILD_DIR}
        - tar -zcvf ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz build 3rdparty/include scripts
        - curl --ftp-create-dirs -T ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz -u $FTP_USER:$FTP_PASSWORD $FTP_HOST/success/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz

    - <<: *clanginit
      stage: compile
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0" SUITE=tests BUILD_TYPE=Debug
      before_install:
        - eval "${MATRIX_EVAL}"
      before_script:
        - export GCOV_PATH=$CI_DIRECTORY/llvm-gcov.sh
        - mysql -u root -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('')"
        - mysql --user="root" -e 'create database osirose;'
        - mysql --user="root" --database="osirose" --password="" < "$TRAVIS_BUILD_DIR/Database/osirose.sql"
        - bash $CI_DIRECTORY/before_script.sh
      script:
        - cd build
        - cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DWITH_CRASH_REPORTS=${WITH_CRASH_REPORTS} -DWITH_COVERAGE_REPORTS=ON ..
        - cmake --build . -- -j ${BUILD_JOB_COUNT}
      after_script:
        - ccache --version
        - ccache --show-stats
        - ctest --output-on-failure

    - <<: *clanginit
      stage: compile
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0" SUITE=tests BUILD_TYPE=Release
      before_install:
        - eval "${MATRIX_EVAL}"
      before_script:
        - export GCOV_PATH=$CI_DIRECTORY/llvm-gcov.sh
        - mysql -u root -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('')"
        - mysql --user="root" -e 'create database osirose;'
        - mysql --user="root" --database="osirose" --password="" < "$TRAVIS_BUILD_DIR/Database/osirose.sql"
        - bash $CI_DIRECTORY/before_script.sh
      script:
        - cd build
        - cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DWITH_CRASH_REPORTS=${WITH_CRASH_REPORTS} -DWITH_COVERAGE_REPORTS=ON ..
        - cmake --build . -- -j ${BUILD_JOB_COUNT}
      after_script:
        - ccache --version
        - ccache --show-stats
        - ctest --output-on-failure

    - <<: *gccinit
      stage: compile
      if: branch = coverity_scan OR (type = cron AND branch = trunk)
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
      before_install:
        - eval "${MATRIX_EVAL}"
      before_script:
        - export CC=gcc-7 CXX=g++-7
        - export GCOV_EXEC=gcov-7
      script: true
      addons:
        apt:
          sources:
          - deadsnakes
          - ubuntu-toolchain-r-test
          packages:
          - lcov
          - g++-7
        coverity_scan:
          project:
            name: "$TRAVIS_REPO_SLUG"
          notification_email: $COVERITY_SCAN_NOTIFICATION_EMAIL
          build_command_prepend: "mkdir build && cd build && cov-configure --comptype gcc --compiler g++-7 --template && cov-configure --comptype gcc --compiler ccache --template && cov-configure --comptype gcc --compiler /usr/lib/ccache/g++-7 && cmake -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DOFFICIAL_BUILD=ON -DWITH_CRASH_REPORTS=OFF .."
          build_command: "cmake --build . -- -j4"
      after_success:
        - mkdir ${TRAVIS_BUILD_DIR}/public
        - tar -czvf ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz ${TRAVIS_BUILD_DIR}/build/cov-int
        - curl --ftp-create-dirs -T ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz -u $FTP_USER:$FTP_PASSWORD $FTP_HOST/success/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/
      after_failure:
        - mkdir ${TRAVIS_BUILD_DIR}/public
        - tar -czvf ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz ${TRAVIS_BUILD_DIR}/build/cov-int
        - curl --ftp-create-dirs -T ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz -u $FTP_USER:$FTP_PASSWORD $FTP_HOST/failure/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/
        - wget https://raw.githubusercontent.com/k3rn31p4nic/travis-ci-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh failure $WEBHOOK_URL

#    - <<: *gccinit
#      stage: testing
#      if: branch != coverity_scan
#      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" SUITE=tests BUILD_TYPE=Debug
#      cache: false
#      before_install:
#        - eval "${MATRIX_EVAL}"
#      before_script:
#        - export GCOV_EXEC=gcov-7
#        - mysql -u root -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('')"
#        - mysql --user="root" -e 'create database osirose;'
#        - mysql --user="root" --database="osirose" --password="" < "$TRAVIS_BUILD_DIR/Database/osirose.sql"
#        - curl -O -u $FTP_USER:$FTP_PASSWORD --remote-name $FTP_HOST/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz
#        - tar -zxvf ${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz
#      script:
#        - ctest --output-on-failure

#    - <<: *clanginit
#      stage: testing
#      if: branch != coverity_scan
#      env: MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0" SUITE=tests BUILD_TYPE=Release
#      cache: false
#      before_install:
#        - eval "${MATRIX_EVAL}"
#      before_script:
#        - export GCOV_EXEC=gcov-7
#        - mysql -u root -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('')"
#        - mysql --user="root" -e 'create database osirose;'
#        - mysql --user="root" --database="osirose" --password="" < "$TRAVIS_BUILD_DIR/Database/osirose.sql"
#        - curl -O -u $FTP_USER:$FTP_PASSWORD --remote-name $FTP_HOST/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz
#        - tar -zxvf ${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz
#      script:
#        - ctest --output-on-failure

    - <<: *gccinit
      stage: testing
      if: branch != coverity_scan
      env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7" SUITE=coverage BUILD_TYPE=Release
      cache: false
      before_install:
        - eval "${MATRIX_EVAL}"
      install: 
        - bash $CI_DIRECTORY/install-lcov.sh
      before_script:
        - export GCOV_EXEC=gcov-7
        - mysql -u root -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('')"
        - mysql --user="root" -e 'create database osirose;'
        - mysql --user="root" --database="osirose" --password="" < "$TRAVIS_BUILD_DIR/Database/osirose.sql"
        - curl -O -u $FTP_USER:$FTP_PASSWORD --remote-name $FTP_HOST/success/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz
        #- curl -u $FTP_USER:$FTP_PASSWORD $FTP_HOST/success/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz  -Q '-DELE success/${TRAVIS_BUILD_NUMBER}/${TRAVIS_OS_NAME}/${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz'
        - tar -zxvf ${TRAVIS_OS_NAME}-${SUITE}-${BUILD_TYPE}.tar.gz
      script:
        - cd build
        - ${LCOV_PATH} --directory . --zerocounters
        - ${LCOV_PATH} -q -c -i -d . -o coverage.base
        - ./bin/TestConfig
        - ./bin/TestConsole
        - ./bin/TestMySQLDB
        - ./bin/TestASIONetwork
        - ./bin/TestRoseCrypt
        - ./bin/TestRoseNetwork
        - ./bin/TestLoginServer
        - ./bin/TestCharServer
        - ./bin/TestAllServers
        - ./bin/TestRosePackets
        #- ./bin/TestSystems
        - ${LCOV_PATH} -q --directory . --capture --output-file coverage.info
        - ${LCOV_PATH} -q -a coverage.base -a coverage.info --output-file coverage.total
        - ${LCOV_PATH} -q --remove coverage.total "/usr/*" "${TRAVIS_BUILD_DIR}/tools/*" "${TRAVIS_BUILD_DIR}/3rdparty/*" "${TRAVIS_BUILD_DIR}/src/tests/*" "${TRAVIS_BUILD_DIR}/src/rosecommon/*/packets/*" --output-file coverage.info.cleaned
        - ${GENHTML_PATH} -o coverage coverage.info.cleaned
        - coveralls-lcov coverage.info.cleaned
        - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
        - rm coverage.base coverage.total coverage.info.cleaned
      after_success:
        - wget https://raw.githubusercontent.com/k3rn31p4nic/travis-ci-discord-webhook/master/send.sh
        - chmod +x send.sh
        - ./send.sh success $WEBHOOK_URL

notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/0363885535a5495e8f8f
    on_success: change
    on_failure: always
    on_start: never
  slack:
    secure: KHU2ZMzBGGtsaWF7wylutlLPAxCEZD2/NQQbmbaEpsaWSitXnO9XOLRLsLJP6QGLOgiDHHmGcRiO7wgmbsvP79zRaChs/LLfUY2F5laXgpZdL9OI/z8zygeY1iSZSNMMr0MCYf7TilRvOqTSFpB7RcuQ65G1ZGow8h6MunU5WaSyjC7REOJcSmL3IQ08Zcf8oZgdd6EqogSW1Eubcp4IhlsiQQTLdzeAQWwkfJ8DDO1gPC8bWdJCBg9hMUub5K/UQHEOY8KmH1KTOk/FedjI8wTWD+0m8SjFJq8wUs9ieQyGikZbK6F8WmjZdG0GLRWb7POxIOQjqxi2/ZRUMTHvDr5s+0BUQmKYUwkc/oUf/Bg/eYnU/LjM7prnQU08ZPGDwoh5L/alZM4eGKez3KFb4Co3e7HSI+FN9mQFKcgjnMOJIE1kaw1V+9Uj1DJemWi6voKmApJ3s8U44FduI30fpAD0FQQw8dEfF2Iug3O093KdPy0aEySOZ44a0VYD5iB7Dc129xumwOd5EAvGXHc+3/Wf0TLsskct2IlNVv6DaKkstk0YXjz7PkhkMJEAvYYi/ANQ8h/Ixh7Xnj7bcX+boBazIM6V+U6sxysQUsvWihXpxtqs+N7Z0eiRbC7s4TAMX1hVVvoERlLRVOTCl+QsRemTgt1QXV0rMl78h8xg8lg=

#after_success:
#  - mkdir ${TRAVIS_BUILD_DIR}/public
#  - tar -czvf ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz ${TRAVIS_BUILD_DIR}/build/bin ${TRAVIS_BUILD_DIR}/build/lib ${TRAVIS_BUILD_DIR}/Database
##  - curl --ftp-create-dirs -T ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz -u $FTP_USER:$FTP_PASSWORD $FTP_HOST/success/
  
after_failure:
  - mkdir ${TRAVIS_BUILD_DIR}/public
  - tar -czvf ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz ${TRAVIS_BUILD_DIR}/3rdparty ${TRAVIS_BUILD_DIR}/build ${TRAVIS_BUILD_DIR}/src ${TRAVIS_BUILD_DIR}/Database /tmp/dumps
  - curl --ftp-create-dirs -T ${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz -u $FTP_USER:$FTP_PASSWORD $FTP_HOST/failure/
  - wget https://raw.githubusercontent.com/k3rn31p4nic/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh failure $WEBHOOK_URL

deploy:
  provider: releases
  api_key:
    secure: u0DKBv0ZaE8+J/WxJTyEyY+PVgtk8ymuOfRN3IxglSEG+JFgGhiUQLD9lZ0S5n3lQZ5b8MPmtbnwuX1XY2PtnWKrb+5OVRR5yvAcR9P0pY1SxtMR4uATVxdFCXim347xn98trRuIomACrLHD/D75HN46hAfPc/gGektguuMr6b2hph2bgGZ2Hd3EPSZq4Q2gAVwHislJLyLf8tX6lvwlIqb3mpaZPRQNBma2AhTTRQOq8u1Fkz9sLV5VDI3AdhfE//+cVCzPX1I2piLKDqZ2MNQNwlWwLaKUy33SDFIUndu6QQhFsL1XDUIXsxhTqu8Y4Qbs1Ksx7iCh1oAPIot7wdI1hJna51vKtMh9tK6r64QNc8GkbEuH7aWbSS0o0w3vx8hzvuDRzj0+gNTDCkEadvPSLExpRGgg8jZSz0C70VQzi+obG6cR9CGkUETlvUmLMaqd6H+WAQwRPUof/cnZUZNW/NAYTR6GSvcTgJOyZy/P0Q5vzsat3LhvpshC9IUzOM3v3GDcQ1s6JL3PRz8dKTzz4et9FpVkn77YW8h7Dgv3Ygag/cAN0dsV4Ds77HImacDSE6BiNm5uenE4CEQeUbWq4PLJl/PDu5V9z9QbCTHKP2STNMg3vCPjg0Sl6RGG+8s5u2LfuZeRQue19UDjnYMsifkxRy+zKr+FYW29c10=
  file: "${TRAVIS_BUILD_DIR}/public/${TRAVIS_OS_NAME}-${TRAVIS_JOB_NUMBER}-${BUILD_TYPE}.tar.gz"
  on:
    repo: dev-osrose/osIROSE-new
    condition: $CXX = "g++-7" && $BUILD_TYPE = "Release"
    branch: trunk
    tags: true
